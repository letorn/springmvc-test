<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
  xmlns:cache="http://www.springframework.org/schema/cache"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://mybatis.org/schema/mybatis-spring
    http://mybatis.org/schema/mybatis-spring.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

  <!-- 从属性文件中读取属性值,以替代受管Bean的定义 -->
  <!--
  <context:property-override location="classpath:bean.overrides" />
  -->

  <!-- 数据库连接池c3p0配置 -->
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass" value="com.mysql.jdbc.Driver" />
    <property name="jdbcUrl" value="jdbc:mysql://${mysql.host}:${mysql.port}/${mysql.database}?useUnicode=true&amp;characterEncoding=utf8" />
    <property name="user" value="${mysql.user}" />
    <property name="password" value="${mysql.password}" />
    <property name="maxPoolSize" value="20" />
    <property name="minPoolSize" value="2" />
    <property name="initialPoolSize" value="3" />
    <property name="acquireIncrement" value="3" />
    <property name="maxIdleTime" value="60" />
    <property name="idleConnectionTestPeriod" value="60" />
  </bean>

  <!-- Spring JDBC -->
  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <!-- 基于注释的cache -->
  <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">    
    <property name="caches">
      <set>
        <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" />
        <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
          <property name="name" value="accountCache" />
        </bean>
      </set>
    </property>
  </bean>
  
  <!-- Spring和MyBatis整合 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
    <property name="dataSource" ref="dataSource" />  
    <!-- 加载映射文件 -->
    <property name="mapperLocations" value="classpath:dao/mapper/*.xml" />  
  </bean>

  <!-- 创建MyBatis Bean -->
  <mybatis:scan base-package="dao.mapper" />

  <!-- Spring和Hibernate整合 -->
  <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <!-- 自动扫描注解方式配置的hibernate类文件 -->
    <property name="packagesToScan">
      <list>
        <value>pojo</value>
      </list>
    </property>
      <property name="hibernateProperties">
        <props>
          <prop key="hibernate.hbm2ddl.auto">update</prop>
          <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
          <prop key="hibernate.show_sql">true</prop>
          <prop key="connection.useUnicode">true</prop>
          <prop key="connection.characterEncoding">UTF-8</prop>
          <!-- 二级缓存 -->
          <prop key="hibernate.cache.use_second_level_cache">true</prop>
          <!-- 查询缓存 -->
          <prop key="hibernate.cache.use_query_cache">true</prop>
          <!-- 设置二级缓存的Provider类 -->
          <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
          <!-- 设置缓存的配置文件路径 -->
          <!-- <prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:ehcache.xml</prop> -->
        </props>
      </property>
  </bean>

  <!-- 配置事务管理器 -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <!-- 配置事务通知属性 -->
  <!--
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="insert*" propagation="REQUIRED" />
      <tx:method name="update*" propagation="REQUIRED" />
      <tx:method name="edit*" propagation="REQUIRED" />
      <tx:method name="save*" propagation="REQUIRED" />
      <tx:method name="add*" propagation="REQUIRED" />
      <tx:method name="new*" propagation="REQUIRED" />
      <tx:method name="set*" propagation="REQUIRED" />
      <tx:method name="remove*" propagation="REQUIRED" />
      <tx:method name="delete*" propagation="REQUIRED" />
      <tx:method name="change*" propagation="REQUIRED" />
      <tx:method name="get*" propagation="REQUIRED" read-only="true" />
      <tx:method name="find*" propagation="REQUIRED" read-only="true" />
      <tx:method name="load*" propagation="REQUIRED" read-only="true" />
      <tx:method name="*" propagation="REQUIRED" read-only="true" />
    </tx:attributes>
  </tx:advice>
  -->
  
  <!-- 配置事务切面 -->
  <!--
  <aop:config>
    <aop:pointcut id="serviceOperation" expression="execution(* service..*.*(..))" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
  </aop:config>
  -->

  <context:component-scan base-package="pojo" />
  <context:component-scan base-package="dao.impl" />
  <context:component-scan base-package="service.impl" />
  <context:component-scan base-package="controller" />

  <!-- 支持MVC注释 -->
  <mvc:annotation-driven />
  <!-- 支持缓存注释 -->
  <cache:annotation-driven />
  <!-- 支持事务注释 -->
  <tx:annotation-driven /> 

</beans>